# Only check cached .zcompdump file once per day. See https://gist.github.com/ctechols/ca1035271ad134841284
autoload -Uz compinit

ZCOMPDUMPFILE=$ZCACHEDIR/zcompdump-$ZSH_VERSION

for dump in $ZCOMPDUMPFILE(N.mh+24); do
  compinit -d $ZCOMPDUMPFILE
done
compinit -C -d $ZCOMPDUMPFILE





# Launch gpg-agent for use by SSH
# ===============================
export GPG_TTY="$(tty)"
export SSH_AUTH_SOCK=$(gpgconf --list-dirs agent-ssh-socket)
gpgconf --launch gpg-agent


# ANTIBODY (zsh plugin manager) 
# ==============================
# Load zsh plugins
source ${ZCACHEDIR}/antibody/zsh_plugins.sh



export EDITOR=nvim
export VISUAL=nvim


# PATH modifications
# ==================

PATH=$PATH:~/.local/bin

# ALIASES
# =======
## maven
alias mci="mvn clean install"
alias mcp="mvn clean package"

## docker/docker-compose
alias dcup="docker-compose up"

## python
alias pip="pip3"

# misc
alias -g e="nvim"
alias open="xdg-open"

# Pacman aliases
alias -g pacman-upgrade="sudo pacman -Syu"      # Synchronize with repositories and then upgrade packages on local system.
alias -g pacman-download="pacman -Sw"           # Download specified package(s) as .tar.xz ball
alias -g pacman-install="sudo pacman -S"        # Install specific package(s) from the repositories
alias -g pacman-install-file="sudo pacman -U"   # Install specific package not from the repositories but from a file 
alias -g pacman-remove="sudo pacman -R"         # Remove the specified package(s), retaining its configuration(s) and required dependencies
alias -g pacman-purge="sudo pacman -Rns"        # Remove the specified package(s), its configuration(s) and unneeded dependencies
alias -g pacman-repoinfo="pacman -Si"           # Display information about a given package in the repositories
alias -g pacman-search="pacman -Ss"             # Search for package(s) in the repositories
alias -g pacman-dbinfo="pacman -Qi"             # Display information about a given package in the local database
alias -g pacman-dbsearch="pacman -Qs"           # Search for package(s) in the local database
alias -g pacman-list-orphaned="pacman -Qdt"     # List all packages which are orphaned
alias -g pacman-clean-cache="sudo pacman -Scc"  # Clean cache - delete all the package files in the cache
alias -g pacman-list-package-files="pacman -Ql" # List all files installed by a given package
alias -g pacman-provides-="pacman -Qo"          # Show package(s) owning the specified file(s)
